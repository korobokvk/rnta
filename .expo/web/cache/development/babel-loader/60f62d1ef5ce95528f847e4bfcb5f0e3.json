{"ast":null,"code":"var _jsxFileName = \"/Users/andrewspies/Documents/Karri/ReactNativeTestApp/RNTA/components/EditScreenInfo.tsx\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { FlatList } from 'react-native-gesture-handler';\nimport { Text, View } from \"./Themed\";\nvar DATA = [{\n  id: '01',\n  title: 'Rework this \"EditScreenInfo.tsx\" page to be a simple welcome screen.'\n}, {\n  id: '02',\n  title: 'The page must contain a nice icon that is appropriate.'\n}, {\n  id: '03',\n  title: 'The page must contain some friendly welcoming text.'\n}];\nexport default function EditScreenInfo(_ref) {\n  var _this = this;\n\n  var path = _ref.path;\n\n  var ListItem = function ListItem(_ref2) {\n    var title = _ref2.title;\n    return React.createElement(View, {\n      style: styles.row,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }\n    }, React.createElement(View, {\n      style: styles.bullet,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, \"\\u2022\" + \" \")), React.createElement(View, {\n      style: styles.bulletList,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, title)));\n  };\n\n  var renderItem = function renderItem(_ref3) {\n    var item = _ref3.item;\n    return React.createElement(ListItem, {\n      title: item.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }\n    });\n  };\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.getStartedContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.getStartedText,\n    lightColor: \"rgba(0,0,0,0.8)\",\n    darkColor: \"rgba(255,255,255,0.8)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Instructions:\"), React.createElement(Text, {\n    style: styles.instructionsText,\n    lightColor: \"rgba(0,0,0,0.8)\",\n    darkColor: \"rgba(255,255,255,0.8)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, React.createElement(FlatList, {\n    data: DATA,\n    renderItem: renderItem,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }))));\n}\nvar styles = StyleSheet.create({\n  getStartedContainer: {\n    marginHorizontal: 50\n  },\n  homeScreenFilename: {\n    marginVertical: 7\n  },\n  getStartedText: {\n    fontSize: 24,\n    lineHeight: 32,\n    textAlign: 'left',\n    marginBottom: 25\n  },\n  instructionsText: {\n    fontSize: 16,\n    lineHeight: 20,\n    textAlign: 'left'\n  },\n  row: {\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    flexWrap: 'wrap',\n    flex: 1,\n    marginVertical: 4\n  },\n  bullet: {\n    width: 10\n  },\n  bulletList: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["/Users/andrewspies/Documents/Karri/ReactNativeTestApp/RNTA/components/EditScreenInfo.tsx"],"names":["React","FlatList","Text","View","DATA","id","title","EditScreenInfo","path","ListItem","styles","row","bullet","bulletList","renderItem","item","getStartedContainer","getStartedText","instructionsText","StyleSheet","create","marginHorizontal","homeScreenFilename","marginVertical","fontSize","lineHeight","textAlign","marginBottom","flexDirection","alignItems","flexWrap","flex","width"],"mappings":"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","sourcesContent":["import * as WebBrowser from 'expo-web-browser';\nimport React from 'react';\nimport { StyleSheet, TouchableOpacity } from 'react-native';\nimport { FlatList } from 'react-native-gesture-handler';\n\nimport Colors from '../constants/Colors';\nimport { MonoText } from './StyledText';\nimport { Text, View } from './Themed';\n\nconst DATA = [\n  {\n    id: '01',\n    title: 'Rework this \"EditScreenInfo.tsx\" page to be a simple welcome screen.'\n  },\n  { \n    id: '02',\n    title: 'The page must contain a nice icon that is appropriate.'\n  },\n  { \n    id: '03',\n    title: 'The page must contain some friendly welcoming text.'\n  }\n]\n\n\nexport default function EditScreenInfo({ path }: { path: string }) {\n\n  type DataProps = {\n    title: string;\n  }\n\n  type ItemProps = {\n    item: any;\n  }\n\n  const ListItem = ({title}: DataProps) => (\n    <View style={styles.row}>\n      <View style={styles.bullet}>\n        <Text >{'\\u2022' + \" \"}</Text>\n      </View>\n      <View style={styles.bulletList}>\n        <Text>{title}</Text>\n      </View>\n      \n    </View>\n  );\n  const renderItem = ({item}: ItemProps) => (\n    <ListItem title={item.title} />\n  );\n  return (\n    <View>\n      <View style={styles.getStartedContainer}>\n        <Text\n          style={styles.getStartedText}\n          lightColor=\"rgba(0,0,0,0.8)\"\n          darkColor=\"rgba(255,255,255,0.8)\">\n          Instructions:\n        </Text>\n\n        <Text\n          style={styles.instructionsText}\n          lightColor=\"rgba(0,0,0,0.8)\"\n          darkColor=\"rgba(255,255,255,0.8)\">\n          <FlatList\n            data={DATA}\n            renderItem={renderItem}\n            keyExtractor={item => item.id}\n          />\n        </Text>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  getStartedContainer: {\n    marginHorizontal: 50,\n  },\n  homeScreenFilename: {\n    marginVertical: 7,\n  },\n  getStartedText: {\n    fontSize: 24,\n    lineHeight: 32,\n    textAlign: 'left',\n    marginBottom: 25\n  },\n  instructionsText: {\n    fontSize: 16,\n    lineHeight: 20,\n    textAlign: 'left',\n  },\n  row: {\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    flexWrap: 'wrap',\n    flex: 1,\n    marginVertical: 4\n  },\n  bullet: {\n    width: 10\n  },\n  bulletList: {\n    flex: 1\n  }\n});\n"]},"metadata":{},"sourceType":"module"}